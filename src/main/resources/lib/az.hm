## Defines a Azure Blob Storage module that can be used as a file system in HyperMake.
## Behind the scenes it uses the `az storage blob` command group.
## Use as follows:
## import az
## object my_storage = az.storage_blob(container="my_container", root="", extra_args="")
class storage_blob(container, root="", extra_args=""):

  def read(file):
    az storage blob download \
      --container-name $container \
      --name $root/$file \
      $extra_args

  def mkdir(dir):
    true

  def exists(file):
    az storage blob exists \
      --container-name $container \
      --name $root/$file \
      $extra_args \
    | jq -e '.exists' > /dev/null

  def link(src, dst):
    az storage blob copy start \
      --source-blob $root/$src \
      --destination-blob $root/$dst \
      --source-container $container \
      --destination-container $container \
      --requires-sync true \
      $extra_args

  def touch(file):
    tmp=$(mktemp)
    az storage blob upload \
      --file $tmp \
      --container-name $container \
      --name $root/$file \
      $extra_args
    rm $tmp

  def remove(file):
    az storage blob delete \
      --container-name $container \
      --name $root/$file \
      $extra_args

  def upload(src, dst):  # TODO: upload folder
    az storage blob upload \
      --file $src \
      --container-name $container \
      --name $root/$dst \
      --overwrite \
      $extra_args

  def download(src, dst):
    az storage blob download \
      --container-name $container \
      --name $root/$src \
      --file $dst \
      --overwrite \
      $extra_args
