## Defines a Azure Blob Storage module that can be used as a file system in HyperMake.
## Behind the scenes it uses the `az storage blob` command group.
## Use as follows:
## import az
## object my_storage = az.BlobStorage(container="my_container", extra_args="")
class BlobStorage(container, extra_args):

  def read(file):
    az storage blob download \
      --container-name $container \
      --name $file \
      $extra_args

  def mkdir(dir):
    true

  def exists(file):
    az storage blob exists \
      --container-name $container \
      --name $file \
      $extra_args

  def link(src, dst):
    az storage blob copy start \
      --source-blob $src \
      --destination-blob $dst \
      --source-container $container \
      --destination-container $container \
      --requires-sync \
      $extra_args

  def touch(file):
    az storage blob upload \
      --data "" \
      --container-name $container \
      --name $file \
      $extra_args

  def delete(file):
    az storage blob delete \
      --container-name $container \
      --name $file \
      $extra_args

  def upload(src, dst):
    az storage blob upload \
      --file $src \
      --container-name $container \
      --name $dst \
      $extra_args

  def download(src, dst):
    az storage blob download \
      --container-name $container \
      --name $src \
      --file $dst \
      $extra_args


#class DataLakeStorageGen2(container, extra_args):
