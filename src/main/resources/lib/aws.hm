# Supports AWS S3 as a HyperMake file system.
# Use as follows:
# import aws
# object my_s3 = aws.s3(bucket="my_bucket", root="")
class s3(bucket, root):

  def read(file):
    key=$([ -z ${root%/} ] && echo $file || echo "${root%/}/$file")
    aws s3 cp s3://$bucket/$key -

  def mkdir(dir):
    key=$([ -z ${root%/} ] && echo $dir || echo "${root%/}/$dir")
    aws s3api put-object --bucket $bucket --key $key/

  def exists(file):
    set +e
    key=$([ -z ${root%/} ] && echo $file || echo "${root%/}/$file")
    aws s3api head-object --bucket $bucket --key $key
    if [ $? == 254 ]
    then
      aws s3api head-object --bucket $bucket --key $key/
      [ $? != 254 ]
    else
      true
    fi

  def link(src, dst):
    src_key=$([ -z ${root%/} ] && echo $src || echo "${root%/}/$src")
    dst_key=$([ -z ${root%/} ] && echo $dst || echo "${root%/}/$dst")
    if aws s3api list-objects-v2 --bucket $bucket --prefix $src_key/ --query 'Contents[]' --max-items 0 | jq -e;
    then
      aws s3 cp s3://$bucket/$src_key/ s3://$bucket/$dst_key --recursive
    else
      aws s3 cp s3://$bucket/$src_key s3://$bucket/$dst_key
    fi

  def touch(file):
    key=$([ -z ${root%/} ] && echo $file || echo "${root%/}/$file")
    echo "" | aws s3 cp - s3://$bucket/$key

  def remove(file):
    set +e
    key=$([ -z ${root%/} ] && echo $file || echo "${root%/}/$file")
    if aws s3api list-objects-v2 --bucket $bucket --prefix $key/ --query 'Contents[]' --max-items 0 | jq -e
    then
      aws s3 rm s3://$bucket/$key/ --recursive
      aws s3 rm s3://$bucket/$key
    else
      aws s3 rm s3://$bucket/$key
    fi

  def upload(src, dst):
    dst_key=$([ -z ${root%/} ] && echo $dst || echo "${root%/}/$dst")
    if [ -d $src ]
    then
      aws s3 cp $src s3://$bucket/$dst_key/ --recursive
    else
      aws s3 cp $src s3://$bucket/$dst_key
    fi

  def download(src, dst):
    src_key=$([ -z ${root%/} ] && echo $src || echo "${root%/}/$src")
    if aws s3api list-objects-v2 --bucket $bucket --prefix $src_key/ --query 'Contents[]' --max-items 0 | jq -e
    then
      dirname=$(basename $src_key)
      mkdir -p $dst
      aws s3 cp s3://$bucket/$src_key/ $dst/ --recursive
    else
      aws s3 cp s3://$bucket/$src_key $dst
    fi
